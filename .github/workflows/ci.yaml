name: CI

on:
  push:
    branches:
      - master  
  pull_request:
    branches:
      - master 

jobs:
  build:
    runs-on: ubuntu-latest 

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'  

      - name: Install dependencies
        run: npm install  

  sonarqube:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      # Установка Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16' # Укажите нужную версию Node.js
  
      # Установка зависимостей
      - name: Install dependencies
        run: npm install
  
      # Сборка проекта
      - name: Build project
        run: npm install

      - name: Get test project
        run: npm test -- --coverage
  
      # Установка sonar-scanner
      - name: Setup SonarCloud Scanner
        uses: warchant/setup-sonar-scanner@v7
  
      # SonarCloud Scan
      - name: SonarCloud Scan
        run: sonar-scanner -Dsonar.host.url=https://sonarcloud.io 
                          -Dsonar.organization=olgavit15 
                          -Dsonar.login=${{ secrets.SONAR_TOKEN }} 
                          -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} 
                          -Dsonar.projectName=DevOps 
                          -Dsonar.sources=. 
                          -Dsonar.branch.name=${{ github.head_ref }} 
                          -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info 
                          -Dsonar.qualitygate.wait=true

  test:
    runs-on: ubuntu-latest  
    needs: sonarqube 

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16' 

      - name: Install dependencies
        run: npm install  
      - name: Run tests
        run: npm test  

  docker:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t vvo15/my-image1:${{ github.sha }} .

      - name: Push Docker image
        run: |
          docker push vvo15/my-image1:${{ github.sha }}

          